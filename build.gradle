// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    ext.multidex_version = "2.0.1"

    ext.legacy_v4_version = "1.0.0"
    ext.app_compat_version = "1.1.0"
    ext.material_version = "1.2.0-alpha02"
    ext.vector_drawable_version = "1.0.0"
    ext.constraint_layout_version = '1.1.3'
    ext.recycler_view_version = "1.1.0"
    ext.card_view_version = "1.0.0"
    ext.browser_version = "1.0.0"
    ext.exif_version = "1.1.0"
    ext.media_version = "1.1.0"
    ext.arch_version = "2.1.0"
    ext.arch_worker_version = "1.0.1"

    ext.rx_java_version = '2.2.15'
    ext.rx_android_version = '2.1.1'
    ext.glide_version = '4.10.0'
    ext.gson_version = '2.8.6'
    ext.facebook_version = '5.11.2'

    ext.espresso_version = "3.2.0"
    ext.uiautomator_version = "2.2.0"
    ext.orchestrator_version = "1.2.0"
    ext.androidX_test_version = "1.2.0"

    ext.pickpic_version = "1.0.0"

    ext.target_version = 28
    ext.min_version = 18

    def version = System.getenv("VERSION")
    def code = System.getenv("VERSION_CODE")
    ext.version_name = version == null ? "${System.currentTimeMillis()}-SNAPSHOT" : version
    ext.version_code = code == null ? 1 : code.toInteger()

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.18'
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.24.2'
        classpath 'com.novoda:bintray-release:0.9.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    setGroup('com.lovoo.android')
    setVersion(version_name)

    repositories {
        google()
        jcenter()
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task names {
    print(project.getName())
}